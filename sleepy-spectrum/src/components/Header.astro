---
const menuItems = [
  { name: "Inicio", href: "#welcome" },
  { name: "Experiencia", href: "#experience" },
  { name: "Habilidades", href: "#skills" },
  { name: "Proyectos", href: "#projects" },
  { name: "Contacto", href: "#contact" },
];
---
<header class="fixed top-0 left-0 w-full z-50 bg-transparent dark:bg-gray-800 transition-colors duration-300 ease-in-out">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <nav class="flex items-center justify-between h-16">
      <!-- Logo -->
      <a href="#welcome" class="text-2xl font-semibold text-white dark:text-gray-200">
        MiPortafolio
      </a>

      <!-- Desktop Menu -->
      <div class="hidden md:flex space-x-8">
        {menuItems.map(item => (
          <a
            href={item.href}
            class="text-white dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 px-3 py-2 rounded-md text-sm font-medium transition-colors"
          >
            {item.name}
          </a>
        ))}
      </div>

      <!-- Controls -->
      <div class="flex items-center space-x-4">
        <!-- Dark Mode Toggle -->
        <button id="dark-mode-toggle" class="p-2 rounded-md text-gray-400 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors">
          <svg id="theme-icon" class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <!-- Icono se actualizará con JS -->
          </svg>
        </button>

        <!-- Mobile Menu Button -->
        <button id="mobile-menu-button" class="md:hidden p-2 rounded-md text-gray-400 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </nav>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-gray-100 dark:bg-gray-700">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {menuItems.map(item => (
        <a
          href={item.href}
          class="block text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 px-3 py-2 rounded-md text-base font-medium transition-colors"
        >
          {item.name}
        </a>
      ))}
    </div>
  </div>

  <!-- Scripts -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Toggle del menú móvil
      const menuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');
      if (menuButton && mobileMenu) {
        menuButton.addEventListener('click', () => {
          const expanded = menuButton.getAttribute('aria-expanded') === 'true';
          menuButton.setAttribute('aria-expanded', !expanded);
          mobileMenu.classList.toggle('hidden');
        });
      }

      // Toggle de Modo Oscuro
      const toggleButton = document.getElementById('dark-mode-toggle');
      const themeIcon = document.getElementById('theme-icon');
      const root = document.documentElement;

      const setIcon = () => {
        if (root.classList.contains('dark')) {
          themeIcon.innerHTML = `
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                  d="M12 3v1m0 16v1m8.66-8.66h-1M4.34 12.34h-1m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M12 5a7 7 0 100 14 7 7 0 000-14z" />
          `;
        } else {
          themeIcon.innerHTML = `
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                  d="M12 3v1m0 16v1m8.66-8.66h-1M4.34 12.34h-1m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M12 5a7 7 0 100 14 7 7 0 000-14z" />
          `;
        }
      };

      if (toggleButton && themeIcon) {
        toggleButton.addEventListener('click', () => {
          root.classList.toggle('dark');
          setIcon();
          localStorage.setItem('theme', root.classList.contains('dark') ? 'dark' : 'light');
        });

        // Inicializar tema
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
          root.classList.toggle('dark', savedTheme === 'dark');
        } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          root.classList.add('dark');
        }
        setIcon();
      }
    });
  </script>
</header>

<style>
  /* Resalta el enlace activo */
  .nav-link.active {
    color: #4F46E5; /* Indigo-600 */
    font-weight: 600;
  }

  /* Efecto de opacidad en el header al hacer scroll */
  #header {
    background-color: transparent;
    transition: background-color 0.3s ease;
  }

  #header.bg-white {
    background-color: white;
  }

  /* Sombra cuando el header se hace opaco */
  #header.bg-white.shadow {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  /* Estilo del menú móvil */
  #mobile-menu {
    background-color: #fff;
    border-radius: 8px;
    padding: 8px;
  }
</style>
